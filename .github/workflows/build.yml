name: Test, Build, and Deploy 

on: [push]

jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:
    - name: checkout repo
      uses: actions/checkout@v1
    - name: download binaryen release
      run: curl -u dakom:"$GITHUB_TOKEN" -s https://api.github.com/repos/WebAssembly/binaryen/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | xargs -I {} wget -c https://github.com/WebAssembly/binaryen/releases/latest/download/binaryen-{}-x86_64-linux.tar.gz -O binaryen.tgz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: extract binaryen to folder 
      run: mkdir binaryen && tar -zxvf ./binaryen.tgz -C binaryen --strip-components 1
    - name: add binaryen to path
      uses: dakom/actions-path@master
      with:
        path: ${{github.workspace}}/binaryen
    - name: echo path 
      run: echo $PATH
    - name: check wasm-opt
      working-directory: examples
      run: wasm-opt --help
    - name: install node
      uses: actions/setup-node@v1
    - name: install rust nightly
      run: rustup toolchain install nightly
    - name: make nightly the default
      run: rustup default nightly
    - name: add rust target
      run: rustup target add wasm32-unknown-unknown
    - name: install wasm-bindgen
      run: cargo install wasm-bindgen-cli
    - name: install npm deps in main folder
      working-directory: examples
      run: npm ci
    - name: bundle
      working-directory: examples
      run: npm run bundle:ci
    - name: list debug
      working-directory: examples
      run: ls -la dist
    - name: upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: dist 
        path: examples/dist 

  deploy:
    runs-on: ubuntu-latest
    needs: bundle
    steps:
    - name: checkout repo
      uses: actions/checkout@v1
    - name: download artifacts
      uses: actions/download-artifact@master
      with:
        name: dist 
        path: dist
    - name: list debug
      run: ls -la dist
    - name: deploy to gh_pages
      uses: maxheld83/ghpages@master
      env:
        BUILD_DIR: "dist/"
        GH_PAT: ${{ secrets.GH_PAT }}
